<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.mapper.adminMapper">
	<!-- Join절 사용하기 위한 resultMap 모두 직접 설정하기 -->
	<resultMap type="com.itwillbs.domain.Question_boardDTO"
		id="questMap">
		<id property="quest_id" column="quest_id" />
		<result property="quest_id" column="quest_id" />
		<result property="quest_writer_id" column="quest_writer_id" />
		<result property="quest_sub" column="quest_sub" />
		<result property="quest_cont" column="quest_cont" />
		<result property="quest_cre_date" column="quest_cre_date" />
		<result property="quest_cate" column="quest_cate" />
		<result property="quest_public" column="quest_public" />
		<result property="photo_url" column="photo_url" />
		<result property="quest_view" column="quest_view" />
		<result property="quest_del_at" column="quest_del_at" />
		<result property="quest_del_date" column="quest_del_date" />
		<collection property="userList" resultMap="userMap">
		</collection>
	</resultMap>

	<resultMap type="com.itwillbs.domain.UserDTO" id="userMap">
		<result property="user_id" column="user_id" />
		<result property="user_pwd" column="user_pwd" />
		<result property="user_name" column="user_name" />
		<result property="user_nick" column="user_nick" />
		<result property="user_phone" column="user_phone" />
		<result property="user_email" column="user_email" />
		<result property="user_birth" column="user_birth" />
		<result property="join_date" column="join_date" />
		<result property="user_serv_agree" column="user_serv_agree" />
		<result property="user_info_agree" column="user_info_agree" />
		<result property="user_login_time" column="user_login_time" />
		<result property="user_active" column="user_active" />
		<result property="user_status" column="user_status" />
	</resultMap>



	<!-- 공지사항 작성 -->
	<insert id="noticeJoin">
		insert into notice_board (admin_id, notice_sub, notice_cont,
		notice_cre_date, photo_url, notice_del_at)
		values (#{admin_id}, #{notice_sub}, #{notice_cont}, now(), #{photo_url},
		'N')
	</insert>

	<!-- 공지사항 리스트 조회 -->
	<select id="noticeList" resultType="Notice_boardDTO">
		select * from notice_board
		where notice_del_at = 'N'
	</select>

	<!-- 공지사항 본문 조회 -->
	<select id="noticeOneList" resultType="Notice_boardDTO">
		select * from notice_board
		where notice_id = #{notice_id}
	</select>
	
	 <!-- 공지사항 조회수 1증가 -->
	  <update id="updateNoticeCount">
		UPDATE notice_board
		SET notice_view=notice_view+1
		WHERE notice_id=#{notice_id}
	  </update>
	  
	  
	 <!-- 문의게시글 조회수 1증가 -->
	  <update id="updateQuestCount">
		UPDATE question_board
		SET quest_view=quest_view+1
		WHERE quest_id=#{quest_id}
	  </update>
	
	
	<!-- 공지 게시판 글 내용 수정 -->
	<update id="adminNoticeModify">
		update notice_board set notice_sub=#{notice_sub},notice_cont=#{notice_cont},admin_id=#{admin_id},photo_url=#{photo_url}
		where notice_id = #{notice_id}
	</update>
	
		<!-- 거래 게시판 글 내용 삭제 -->
	<update id="deleteNoticeContent">
		update notice_board
		set notice_del_at = 'Y', notice_del_date = now()
		where notice_id = #{notice_id}
	</update>


	<!-- 문의 게시글 목록 조회 -->
	<select id="questionList" resultMap="questMap">
		select qb.quest_id,qb.quest_sub, qb.quest_cre_date, u.user_nick, qb.quest_public,qb.quest_view
		from question_board qb
		join user u
		on qb.quest_writer_id = u.user_id
		where quest_del_at = 'N'
	</select>


	<!-- 문의 게시글 내용 조회 -->
	<select id="QuestionOneList" resultMap="questMap">
		select qb.quest_id,
		qb.quest_sub, qb.quest_cre_date, u.user_nick,qb.quest_cont,qb.quest_writer_id,qb.quest_public,qb.quest_view
		from question_board qb join user u
		on qb.quest_writer_id = u.user_id
		where
		quest_id = #{quest_id}
	</select>

	<!-- 문의 게시글 답변 작성 -->
	<insert id="questionCommend">
    insert into question_commend(quest_id, comm_cont, comm_cre_date, admin_id)
    values(#{quest_id}, #{comm_cont}, now() , #{admin_id})
	</insert>



	<!-- 경기일정 등록 -->
	<insert id="scheduleJoin">
		insert into game_schedule (game_date, game_time, stad_id, home_team_id,
		away_team_id)
		values (#{game_date}, #{game_time}, (select stad_id from team_n_stadium
		where team_id = #{home_team_id}), #{home_team_id}, #{away_team_id})
	</insert>

	<!-- 경기일정 수정 -->
	<update id="scheduleUpdate">
		update game_schedule
		set game_date = #{game_date}, game_time = #{game_time}, stad_id = (select
		stad_id from team_n_stadium where team_id = #{home_team_id}),
		home_team_id = #{home_team_id}, away_team_id = #{away_team_id}
		where game_id = #{game_id}
	</update>



	<!-- 경기정보 리스트 조회 -->
	<select id="scheduleList" resultType="Game_scheduleDTO">
		select * from game_schedule
	</select>

	<!-- 경기정보 수정시 리스트 조회 -->
	<select id="scheduleOne" resultType="Game_scheduleDTO">
		select * from game_schedule where game_id = #{game_id}
	</select>

		 	<!-- 일반회원의 예매 내역 조회 -->
	 	<select id="memberTicketingList" resultType="Game_scheduleDTO">
			select game_date, game_time, stad_id, home_team_id, away_team_id
			from (reservation_info ri1 join game_schedule gs
			on ri1.game_id = gs.game_id), 
			(reservation_info ri2 join user u
			on ri2.user_id = u.user_id)
			where u.user_id = #{user_id};
	 	</select>



	<!-- 일반회원 조회 -->
	<select id="generalMemberList" resultType="UserDTO">
		select * from user
		where user_status="USE"
	</select>

	<!-- 탈퇴회원 조회 -->
	<select id="withdrawMemberList" resultType="UserDTO">
		select * from user
		where user_status="OUT"
	</select>

	
	<!-- 일반 회원수 출력 -->
	<select id="generalMemberCount" resultType="int">
		select count(*)
        from user
        where user_status = "USE";
	</select>

	<!-- 탈퇴 회원수 출력 -->
	<select id="withdrawMemberCount" resultType="int">
		select count(*)
        from user
        where user_status = "OUT";
	</select>
</mapper>

